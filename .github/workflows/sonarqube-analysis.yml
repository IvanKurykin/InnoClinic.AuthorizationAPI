name: SonarQube Analysis

on:
  pull_request:
    branches: [ '*' ]
  push:
    branches: [ 'main' ]

jobs:
  sonarqube:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
	
      - name: Setup Java
  	uses: actions/setup-java@v3
  	with:
    	  java-version: '17'
    	  distribution: 'temurin'

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore InnoClinic.AuthorizationAPI/InnoClinic.AuthorizationAPI.sln

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Run SonarQube analysis
        run: |
          dotnet sonarscanner begin /k:"InnoClinic.AuthorizationAPI" /o:"ivankurykin" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.scanner.skipJreProvisioning=true /d:sonar.cs.vscoveragexml.reportsPaths="**/coverage.cobertura.xml"
          dotnet build InnoClinic.AuthorizationAPI/InnoClinic.AuthorizationAPI.sln --configuration Release --no-restore
          dotnet test InnoClinic.AuthorizationAPI/InnoClinic.AuthorizationAPI.sln --configuration Release --collect:"XPlat Code Coverage" --no-build --logger "trx;LogFileName=testresults.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"