name: SonarQube Analysis

on:
  pull_request:
    branches: [ '*' ]
  push:
    branches: [ 'main' ]

jobs:
  sonarqube:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install Coverlet
        run: dotnet tool install --global coverlet.console

      - name: Clean TestResults
        run: |
          Remove-Item -Path "TestResults" -Recurse -Force -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path "TestResults" -Force

      - name: Run SonarQube analysis
        run: |
          dotnet sonarscanner begin /k:"IvanKurykin_InnoClinic.AuthorizationAPI" /o:"ivankurykin" `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.scanner.skipJreProvisioning=true `
            /d:sonar.cs.vscoveragexml.reportsPaths="**/coverage.cobertura.xml" `
            /d:sonar.coverage.exclusions="**Tests.cs,**Test*.cs" `
            /d:sonar.dotnet.excludeTestProjects=true

          dotnet build InnoClinic.AuthorizationAPI/InnoClinic.AuthorizationAPI.sln --configuration Release --no-restore

          dotnet test InnoClinic.AuthorizationAPI/InnoClinic.AuthorizationAPI.sln `
            --configuration Release `
            --no-build `
            --collect:"XPlat Code Coverage" `
            --logger "trx;LogFileName=testresults.trx" `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=cobertura `
            /p:CoverletOutput="TestResults\" `
            /p:Exclude="[xunit.*]*,[*]*.Tests" `
            /p:Include="[*]*" `
            /p:Threshold=0

          Get-ChildItem -Path . -Recurse -Filter "coverage.cobertura.xml" | Write-Host
          Get-Content (Get-ChildItem -Path . -Recurse -Filter "coverage.cobertura.xml").FullName | Select-Object -First 20

          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"